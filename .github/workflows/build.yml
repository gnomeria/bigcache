name: Go Build
on: [push]
env:
  GO111MODULE: on
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        go: ["1.12.x", "1.13.x"]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go}}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Installing additional dependencies
        run: |
          go get github.com/modocache/gover;
          go get github.com/mattn/goveralls;
          go get golang.org/x/tools/cmd/cover;
          go get golang.org/x/tools/cmd/goimports;
          go get github.com/stretchr/testify/assert;

      - name: Lint code
        run: |
          # gofiles=$(find ./ -name '*.go') && [ -z "$gofiles" ] || unformatted=$(goimports -l $gofiles) && [ -z "$unformatted" ] || (echo >&2 "Go files must be formatted with gofmt. Following files has problem: $unformatted" &&  false);
          # diff <(echo -n) <(gofmt -s -d .)
          export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
          go get -u golang.org/x/lint/golint 
          golint ./...

      - name: Static code check
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u github.com/gordonklaus/ineffassign
          ineffassign .
          go vet ./...

      - name: Test
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get github.com/modocache/gover;
          go test -race -count=1 -coverprofile=queue.coverprofile ./queue
          go test -race -count=1 -coverprofile=server.coverprofile ./server
          go test -race -count=1 -coverprofile=main.coverprofile
          gover
          goveralls -coverprofile=gover.coverprofile

      # - name: Coveralls upload
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.github_token }}
      #     path-to-lcov: ./gover.coverprofile

      - name: Build
        run: go build -v .
